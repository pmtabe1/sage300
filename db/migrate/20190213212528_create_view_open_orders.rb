class CreateViewOpenOrders < ActiveRecord::Migration[5.1]
  def change
    execute <<-SQL
      drop view if exists OpenOrders
    SQL

    execute <<-SQL
      CREATE VIEW OpenOrders AS
      SELECT
        TOP (100) PERCENT dbo.OEORDD.ITEM, dbo.ICITEM.[DESC], dbo.OEORDH.ORDUNIQ, dbo.OEORDH.ORDNUMBER, dbo.OEORDD.LOCATION, 
        dbo.OEORDH.CUSTOMER, dbo.OEORDH.BILNAME AS CUSTNAME, dbo.OEORDH.SALESPER1 AS SALESREP, dbo.OEORDH.ORDDATE, dbo.OEORDD.QTYORDERED, 
        dbo.OEORDD.QTYBACKORD, dbo.OEORDD.QTYCOMMIT, dbo.OEORDD.UNITPRICE * dbo.OEORDD.QTYBACKORD AS ORDAMOUNT, dbo.OEORDH.CUSTGROUP,
        dbo.OEORDD.MOSTREC * dbo.OEORDD.QTYBACKORD AS MRCAMOUNT,
        ICILOC_1.QTYONHAND - ICILOC_1.QTYCOMMIT AS LOCSTOCK, PONUMBER, REFERENCE,
        (
          SELECT SUM(QTYONHAND - QTYCOMMIT) AS Expr1
          FROM dbo.ICILOC
          WHERE (REPLACE(dbo.OEORDD.ITEM, '-', '') = ITEMNO)
        ) AS COMPSTOCK
      FROM dbo.OEORDH 
      INNER JOIN dbo.OEORDD ON dbo.OEORDD.ORDUNIQ = dbo.OEORDH.ORDUNIQ
      INNER JOIN dbo.ICILOC AS ICILOC_1 ON REPLACE(dbo.OEORDD.ITEM, '-', '') = ICILOC_1.ITEMNO AND dbo.OEORDD.LOCATION = ICILOC_1.LOCATION
      INNER JOIN dbo.ICITEM ON REPLACE(dbo.OEORDD.ITEM, '-', '') = dbo.ICITEM.ITEMNO
      WHERE (dbo.OEORDH.TYPE <> 4)
        AND (dbo.OEORDD.COMPLETE = 0)
        AND (dbo.OEORDD.QTYBACKORD > 0)
        --AND (dbo.OEORDH.LOCATION NOT IN ('2D', '9', '12'))
      ORDER BY dbo.OEORDD.ITEM, dbo.OEORDD.LOCATION
    SQL
  end
end
