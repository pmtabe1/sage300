class CreateViewSalesHistoryDetail < ActiveRecord::Migration[5.1]
  def change
    execute <<-SQL
      drop view if exists SalesHistoryDetail
    SQL

    execute <<-SQL
      CREATE VIEW SalesHistoryDetail AS
      SELECT
        CUSTOMER, ITEM, YR, PERIOD, TRANDATE, SALESPER, TERRITORY, CATEGORY, LOCATION,
        QTYSOLD, FAMTSALES, FCSTSALES, FRETSALES, FAMTSALES - FRETSALES AS NETSALES,
        FAMTSALES - FRETSALES - FCSTSALES AS MARAMOUNT,
        ISNULL((FAMTSALES - FRETSALES) - FCSTSALES / NULLIF (FAMTSALES - FRETSALES, 0), 0) AS MARPERCENT,
        CASE 
          WHEN DATEPART(dy, CONVERT(DATE, NULLIF (CONVERT(VARCHAR(10), CONVERT(INT, TRANDATE)), 0))) <= DATEPART(dy, GETDATE())
          THEN QTYSOLD
          ELSE 0 
        END AS YTDQTYSOLD,

        CASE 
          WHEN DATEPART(dy, CONVERT(DATE, NULLIF (CONVERT(VARCHAR(10), CONVERT(INT, [TRANDATE])), 0))) <= DATEPART(dy, GETDATE())
          THEN FAMTSALES 
          ELSE 0 
        END AS YTDFAMTSALES,

        CASE 
          WHEN DATEPART(dy, CONVERT(DATE, NULLIF (CONVERT(VARCHAR(10), CONVERT(INT, [TRANDATE])), 0))) <= DATEPART(dy, GETDATE()) 
          THEN FCSTSALES
          ELSE 0 
        END AS YTDFCSTSALES,

        CASE 
          WHEN DATEPART(dy, CONVERT(DATE, NULLIF (CONVERT(VARCHAR(10), CONVERT(INT, [TRANDATE])), 0))) <= DATEPART(dy, GETDATE())
          THEN FRETSALES
          ELSE 0
        END AS YTDFRETSALES,
        CASE 
          WHEN DATEPART(dy, CONVERT(DATE, NULLIF (CONVERT(VARCHAR(10), CONVERT(INT, [TRANDATE])), 0))) <= DATEPART(dy, GETDATE())
          THEN (FAMTSALES - FRETSALES)
          ELSE 0
        END AS YTDNETSALES,

        CASE
          WHEN DATEPART(dy, CONVERT(DATE, NULLIF (CONVERT(VARCHAR(10), CONVERT(INT, [TRANDATE])), 0))) <= DATEPART(dy, GETDATE())
          THEN (FAMTSALES - FRETSALES - FCSTSALES) 
          ELSE 0
        END AS YTDGROSMARGIN

      FROM dbo.OESHDT
      WHERE (YR >= YEAR(DATEADD(MONTH, - 36, GETDATE())))
    SQL
  end
end
